source ~/.bash/git-prompt.sh
PS1='\u@\h:\W$(__git_ps1 " (%s)")\$ '

{% if ansible_os_family != "Darwin" %}
export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))
export M2_HOME=/opt/maven
export MAVEN_HOME=/opt/maven    
{% endif %}

{% if ansible_os_family == "Darwin" %}
export JAVA_HOME=$(/usr/libexec/java_home)
export PATH="/opt/homebrew/bin:$PATH"
{% endif %}

for f in ~/.bash_includes/*; do source $f; done

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

export CLICOLOR=1

loc () {
	wc -l $(find ./ -name "$1")
}

sha256_verify () {
        checksum=`openssl sha -sha256 "$1" | cut -d "=" -f 2 | xargs echo`
        if [ "$checksum" == "$2" ]
        then
                echo "Checksum matches"
        else
                echo "Actual checksum: $checksum do not match expected checksum $2"
        fi
}

sha256_check () {
        echo "$2 $1" | sha256sum -c;
}

docker_logs () {
        docker container logs -f $1;
}

{% if terminal_prompt == 'powerline' %}
# Powerline
if [ -f {{ powerline_bindings_path }} ]; then
  powerline-daemon -q
  POWERLINE_BASH_CONTINUATION=1
  POWERLINE_BASH_SELECT=1
  source {{ powerline_bindings_path }}
fi
{% endif %}

# wget https://github.com/BlackReloaded/wsl2-ssh-pageant/releases/latest/download/wsl2-ssh-pageant.exe -O ~/.ssh/wsl2-ssh-pageant.exe
# chmod +x ~/.ssh/wsl2-ssh-pageant.exe
export SSH_AUTH_SOCK="$HOME/.ssh/agent.sock"
if ! ss -a | grep -q "$SSH_AUTH_SOCK"; then
  rm -f "$SSH_AUTH_SOCK"
  wsl2_ssh_pageant_bin="$HOME/.ssh/wsl2-ssh-pageant.exe"
  if test -x "$wsl2_ssh_pageant_bin"; then
    (setsid nohup socat UNIX-LISTEN:"$SSH_AUTH_SOCK,fork" EXEC:"$wsl2_ssh_pageant_bin" >/dev/null 2>&1 &)
  else
    echo >&2 "WARNING: $wsl2_ssh_pageant_bin is not executable."
  fi
  unset wsl2_ssh_pageant_bin
fi
# GPG Socket
# Removing Linux GPG Agent socket and replacing it by link to wsl2-ssh-pageant GPG socket
export GPG_AGENT_SOCK="$HOME/.gnupg/S.gpg-agent"
if ! ss -a | grep -q "$GPG_AGENT_SOCK"; then
  rm -rf "$GPG_AGENT_SOCK"
  wsl2_ssh_pageant_bin="$HOME/.ssh/wsl2-ssh-pageant.exe"
  if test -x "$wsl2_ssh_pageant_bin"; then
    (setsid nohup socat UNIX-LISTEN:"$GPG_AGENT_SOCK,fork" EXEC:"$wsl2_ssh_pageant_bin --gpg S.gpg-agent" >/dev/null 2>&1 &)
  else
    echo >&2 "WARNING: $wsl2_ssh_pageant_bin is not executable."
  fi
  unset wsl2_ssh_pageant_bin
fi